openapi: 3.0.0
info:
  title: Recipes Website API
  description: This is an API developed for our full-stack project on Web Development Environments course.
  contact:
    email: lioraftabi@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://virtserver.swaggerhub.com/LiorAftabi/RecipesProject/1.0.0
    description: SwaggerHub API Auto Mocking
tags:
  - name: auth
    description: Operations related to authentication
  - name: users
    description: Operations related to users
  - name: recipes
    description: Operations available on recipes
paths:
  /login:
    get:
      tags:
        - auth
      summary: user login
      description: |
        By passing in the appropriate credentials, you can login to the system
      operationId: userLogin
      parameters:
        - name: username
          in: query
          description: username for login
          required: true
          style: form
          explode: true
          schema:
            maxLength: 8
            minLength: 3
            pattern: "^[a-zA-Z]+$"
            type: string
        - name: password
          in: query
          description: password of user for login
          required: true
          style: form
          explode: true
          schema:
            maxLength: 10
            minLength: 5
            pattern: '^(?=.*[0-9])(?=.*[!@#$%^&*(),.?":{}|<>]).+$'
            type: string
            format: password
      responses:
        "200":
          description: login succeeded
        "409":
          description: A user is already logged in
  /logout:
    get:
      tags:
        - auth
      summary: user logout
      description: user logs out of system
      operationId: userLogout
      parameters:
        - name: username
          in: query
          description: username for logout
          required: true
          style: form
          explode: true
          schema:
            maxLength: 8
            minLength: 3
            pattern: "^[a-zA-Z]+$"
            type: string
      responses:
        "200":
          description: user logged out successfully
        "401":
          description: user is not logged in or session has expired
  /register:
    post:
      tags:
        - auth
      summary: register as a user
      description: add a new user to the system
      operationId: userRegister
      requestBody:
        description: User to register
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: user registered
        "409":
          description: username taken
  /users/{username}/view:
    get:
      tags:
        - users
      summary: get user's viewed recipes
      description: user get a list of his viewed recipes
      operationId: getViewed
      parameters:
        - name: username
          in: path
          description: username
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 8
            minLength: 3
            pattern: "^[a-zA-Z]+$"
            type: string
      responses:
        "200":
          description: viewed recipes were retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Recipe"
        "500":
          description: internal server error
    post:
      tags:
        - users
      summary: mark recipe as viewed
      description: user views recipe and it is marked as viewed
      operationId: viewRecipe
      parameters:
        - name: username
          in: path
          description: username
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 8
            minLength: 3
            pattern: "^[a-zA-Z]+$"
            type: string
        - name: recipeId
          in: query
          description: recipe to mark as viewed
          required: true
          style: form
          explode: true
          schema:
            pattern: "^[0-9]+$"
            type: string
      responses:
        "200":
          description: the recipe was marked as viewed
        "401":
          description: could not mark recipe as viewed
  /users/{username}/favorites:
    get:
      tags:
        - users
      summary: get user's favorite recipes
      description: user get a list of his favorite recipes
      operationId: getFavorites
      parameters:
        - name: username
          in: path
          description: username
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 8
            minLength: 3
            pattern: "^[a-zA-Z]+$"
            type: string
      responses:
        "200":
          description: favorite recipes were retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Recipe"
        "500":
          description: internal server error
    post:
      tags:
        - users
      summary: add recipe to favorites
      description: user adds a recipe to his favorite recipes
      operationId: addToFav
      parameters:
        - name: username
          in: path
          description: username
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 8
            minLength: 3
            pattern: "^[a-zA-Z]+$"
            type: string
        - name: recipeId
          in: query
          description: recipe to add to favorites
          required: true
          style: form
          explode: true
          schema:
            pattern: "^[0-9]+$"
            type: string
      responses:
        "200":
          description: recipe was added to favorites
        "400":
          description: recipe was not found
  /users/{username}/family:
    get:
      tags:
        - users
      summary: get user's family recipes
      description: user get a list of his family recipes
      operationId: getFamRecipes
      parameters:
        - name: username
          in: path
          description: username
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 8
            minLength: 3
            pattern: "^[a-zA-Z]+$"
            type: string
      responses:
        "200":
          description: family recipes were retrieved successfully
          content:
            application/json:
              schema:
                type: array
                example:
                  - id: 1
                    image: https://www.allrecipes.com/thmb/oIBbjuG9rjXDmr5IdFPLM97DOhs=/750x0/filters:no_upscale():max_bytes(150000):strip_icc():format(webp)/257499-ghormeh-sabzi-persian-herb-stew-DDMFS-beauty-4x3-BG-2923-0a3327d626ca4b848bd1d1ebd7ca331d.jpg
                    title: Ghormeh Sabzi
                    readyInMinutes: 180
                    owner: Grandmother Rachel
                    whenToMake: Shabbat
                    summary: "Horshat sabzi or gourmet sabzi is a vegetable and meat stew that is considered the flagship dish in Iranian cuisine. A sour dish whose ingredients are fresh and dried green vegetables that are cooked together with beef and red beans in a long cooking process. The dish is usually eaten on special occasions and on Shabbat, and it is usually served with white rice."
                    ingredients:
                      - 2 bunches of parsley
                      - 2 bunches of dill
                      - 2 bunches of coriander
                      - A quarter of a bunch of mint
                      - 2 large onions
                      - 2 leeks
                      - 2 tablespoons of tomato paste
                      - Olive oil
                      - 1 and a half kg of beef
                      - 3 cups of water
                      - 1 and a half cups of red beans
                      - 4 Persian lemons
                      - Salt to taste
                      - 2 teaspoons of turmeric
                      - 1 teaspoon cumin
                      - 2-3 tablespoons of pomegranate concentrate
                    instructions:
                      - index: 1
                        instruction: "Wash the herbs and dry thoroughly, separate the leaves and chop well."
                      - index: 2
                        instruction: "Cut one onion thinly and fry in a little oil in a wide pan, add chopped leek."
                      - index: 3
                        instruction: Add the tomato paste and continue frying.
                      - index: 4
                        instruction: "When the onion and leek are fried, add the herbs, fry for a few more minutes and remove from the heat. Set aside."
                      - index: 5
                        instruction: Chop the second onion and fry it in olive oil in a separate pot. Cut the meat into cubes approximately 4 cm by 4 cm. Add the meat cubes to the chopped onion and fry to 'close' the meat cubes.
                      - index: 6
                        instruction: Add the water and the beans and cook for about two hours until the meat and beans are soft and cooked.
                      - index: 7
                        instruction: "Add the herbs and mix. Add the lemon powder to the stew with salt, turmeric, cumin and pomegranate concentrate."
                      - index: 8
                        instruction: Cook for another hour on low heat.
                items:
                  $ref: "#/components/schemas/FamilyRecipe"
        "500":
          description: internal server error
  /users/{username}/recipes:
    get:
      tags:
        - users
      summary: get user's recipes
      description: user get a list of his recipes
      operationId: getMyRecipes
      parameters:
        - name: username
          in: path
          description: username
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 8
            minLength: 3
            pattern: "^[a-zA-Z]+$"
            type: string
      responses:
        "200":
          description: user's recipes were retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Recipe"
        "500":
          description: internal server error
    post:
      tags:
        - users
      summary: add new recipe
      description: user adds a new recipe to his list of recipes
      operationId: addRecipe
      parameters:
        - name: username
          in: path
          description: username
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 8
            minLength: 3
            pattern: "^[a-zA-Z]+$"
            type: string
      requestBody:
        description: information required of new recipe
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Recipe"
      responses:
        "200":
          description: the recipe was successfully added to my recipes
        "400":
          description: could not add recipe
  /recipes/random:
    get:
      tags:
        - recipes
      summary: get random recipes
      description: returns a list of random recipes
      operationId: getRandomRecipes
      parameters:
        - name: count
          in: query
          description: number of random recipes to retrieve
          required: false
          style: form
          explode: true
          schema:
            minimum: 1
            type: integer
            example: 10
            default: 3
      responses:
        "200":
          description: random recipes were retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Recipe"
        "500":
          description: internal server error
  /users/{username}/lastViewed:
    get:
      tags:
        - users
      summary: get last viewed recipes
      description: returns a list of a user's last viewed recipes
      operationId: getLastViewed
      parameters:
        - name: username
          in: path
          description: username
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 8
            minLength: 3
            pattern: "^[a-zA-Z]+$"
            type: string
        - name: count
          in: query
          description: number of last viewed recipes to retrieve
          required: false
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
            example: 10
            default: 3
      responses:
        "200":
          description: last viewed recipes were retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Recipe"
        "500":
          description: internal server error
  /recipes/get/{recipeId}:
    get:
      tags:
        - recipes
      summary: get a specific recipe
      description: user/guests get the information of a specific recipe
      operationId: getRecipe
      parameters:
        - name: recipeId
          in: path
          description: id of recipe to get
          required: true
          style: simple
          explode: false
          schema:
            pattern: "^[0-9]+$"
            type: string
      responses:
        "200":
          description: recipe was retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipe"
        "500":
          description: internal server error
  /recipes/instructions/{recipeId}:
    get:
      tags:
        - recipes
      summary: get a specific recipe's instructions
      description: user/guests get the instructions of a specific recipe
      operationId: getRecipeInstructions
      parameters:
        - name: recipeId
          in: path
          description: id of recipe to get
          required: true
          style: simple
          explode: false
          schema:
            pattern: "^[0-9]+$"
            type: string
      responses:
        "200":
          description: recipe instructions were retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalayzedInstructions"
        "500":
          description: internal server error
  /users/{username}/meal:
    get:
      tags:
        - users
      summary: get user's meal
      description: returns a list of a user's recipes that are in his current meal
      operationId: getMeal
      parameters:
        - name: username
          in: path
          description: username
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 8
            minLength: 3
            pattern: "^[a-zA-Z]+$"
            type: string
      responses:
        "200":
          description: meal recipes were retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Recipe"
        "500":
          description: internal server error
  /users/{username}/meal/add:
    post:
      tags:
        - users
      summary: add recipe to meal
      description: user adds a recipe to his current meal
      operationId: addToMeal
      parameters:
        - name: username
          in: path
          description: username
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 8
            minLength: 3
            pattern: "^[a-zA-Z]+$"
            type: string
        - name: recipeId
          in: query
          description: recipe to add to meal
          required: true
          style: form
          explode: true
          schema:
            pattern: "^[0-9]+$"
            type: string
      responses:
        "200":
          description: recipe was added to meal
        "400":
          description: recipe was not found
  /users/{username}/meal/remove:
    post:
      tags:
        - users
      summary: delete recipe from meal
      description: user removes a recipe from his current meal
      operationId: removeFromMeal
      parameters:
        - name: username
          in: path
          description: username
          required: true
          style: simple
          explode: false
          schema:
            maxLength: 8
            minLength: 3
            pattern: "^[a-zA-Z]+$"
            type: string
        - name: recipeId
          in: query
          description: recipe to be removed
          required: true
          style: form
          explode: true
          schema:
            pattern: "^[0-9]+$"
            type: string
      responses:
        "200":
          description: recipe was removed from meal
        "400":
          description: recipe was not found
  /recipes/search:
    get:
      tags:
        - recipes
      summary: search for recipes in the database
      description: returns a list of recipes based on search parameters
      operationId: searchRecipes
      parameters:
        - name: search
          in: query
          description: search term for the recipe
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: pancake
        - name: cuisine
          in: query
          description: type of cuisine to filter the recipes
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: italian
        - name: diet
          in: query
          description: diet type to filter the recipes
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: vegetarian
        - name: intolerance
          in: query
          description: food intolerances to filter the recipes
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: dairy
      responses:
        "200":
          description: searched recipes were retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Recipe"
        "500":
          description: internal server error
  /{username}/isFavorite/{recipeId}:
    get:
      tags:
        - users
      summary: Check if recipe is favorited by user
      description: "Returns true if the recipe with `recipeId` was favorited by the user with `username`, otherwise returns false."
      parameters:
        - name: username
          in: path
          description: The username of the user
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: recipeId
          in: path
          description: The ID of the recipe
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: "True if favorited, otherwise false"
          content:
            application/json:
              schema:
                type: boolean
        "500":
          description: Internal server error
  /{username}/isViewed/{recipeId}:
    get:
      tags:
        - users
      summary: Check if recipe is viewed by user
      description: "Returns true if the recipe with `recipeId` was viewed by the user with `username`, otherwise returns false."
      parameters:
        - name: username
          in: path
          description: The username of the user
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: recipeId
          in: path
          description: The ID of the recipe
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: "True if viewed, otherwise false"
          content:
            application/json:
              schema:
                type: boolean
        "500":
          description: Internal server error
  /users/{username}/recipes/{recipeId}:
    get:
      tags:
        - users
      summary: get a specific recipe
      description: user get the information of a specific recipe he created
      operationId: getUserRecipe
      parameters:
        - name: username
          in: path
          description: The username of the user
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: recipeId
          in: path
          description: id of recipe to get
          required: true
          style: simple
          explode: false
          schema:
            pattern: "^[0-9]+$"
            type: string
      responses:
        "200":
          description: user recipe was retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipe"
        "500":
          description: internal server error
components:
  schemas:
    User:
      required:
        - country
        - email
        - password
        - username
      type: object
      properties:
        username:
          type: string
          example: lioraft
        country:
          type: string
          example: Israel
        password:
          maxLength: 20
          minLength: 8
          pattern: '^(?=.*[0-9])(?=.*[!@#$%^&*(),.?":{}|<>]).+$'
          type: string
          description: "must contain at least one number, one special character, and be between 8-20 characters long."
          format: password
          example: Liorush1!
        email:
          type: string
          format: email
          example: lior@example.com
    Recipe:
      required:
        - extendedIngredients
        - glutenFree
        - image
        - instructions
        - readyInMinutes
        - servings
        - title
        - vegan
        - vegetarian
      type: object
      properties:
        title:
          type: string
          description: Title of the recipe
          example: Chocolate Cake
        image:
          type: string
          description: URL of the recipe image
          format: uri
          example: https://example.com/chocolate-cake.jpg
        readyInMinutes:
          type: integer
          description: Preparation time in minutes
          example: 60
        servings:
          type: integer
          description: Number of servings
          example: 8
        instructions:
          type: array
          items:
            $ref: "#/components/schemas/Recipe_instructions"
        vegetarian:
          type: boolean
          description: Indicates if the recipe is vegetarian
          example: false
        vegan:
          type: boolean
          description: Indicates if the recipe is vegan
          example: false
        glutenFree:
          type: boolean
          description: Indicates if the recipe is gluten-free
          example: false
        extendedIngredients:
          type: array
          items:
            $ref: "#/components/schemas/Recipe_extendedIngredients"
    AnalayzedInstructions:
      type: object
      properties:
        name:
          type: string
          description: Name of the recipe
        steps:
          type: array
          items:
            $ref: "#/components/schemas/Step"
    Step:
      type: object
      properties:
        number:
          type: integer
          description: Step number
        step:
          type: string
          description: Description of the step
        ingredients:
          type: array
          items:
            $ref: "#/components/schemas/Ingredient"
        equipment:
          type: array
          items:
            $ref: "#/components/schemas/Equipment"
        length:
          $ref: "#/components/schemas/Step_length"
        temperature:
          $ref: "#/components/schemas/Step_temperature"
    Ingredient:
      type: object
      properties:
        id:
          type: integer
          description: Ingredient ID
        image:
          type: string
          description: URL of the ingredient image
          format: uri
        name:
          type: string
          description: Name of the ingredient
    Equipment:
      type: object
      properties:
        id:
          type: integer
          description: Equipment ID
        image:
          type: string
          description: URL of the equipment image
          format: uri
        name:
          type: string
          description: Name of the equipment
        temperature:
          $ref: "#/components/schemas/Step_temperature"
    FamilyRecipe:
      type: object
      properties:
        id:
          type: integer
        image:
          type: string
          format: uri
        title:
          type: string
        readyInMinutes:
          type: integer
        owner:
          type: string
        whenToMake:
          type: string
        summary:
          type: string
        ingredients:
          type: array
          items:
            type: string
        instructions:
          type: array
          items:
            $ref: "#/components/schemas/FamilyRecipe_instructions"
    Recipe_ingredients:
      type: object
      properties:
        name:
          type: string
          description: Name of the ingredient
          example: flour
        amount:
          type: number
          description: Amount of the ingredient
          example: 2
        unit:
          type: string
          description: Unit of the amount
          example: cups
    Recipe_instructions:
      type: object
      properties:
        step:
          type: string
          description: Step description
          example: Preheat the oven to 350°F (175°C).
        ingredients:
          type: array
          items:
            $ref: "#/components/schemas/Recipe_ingredients"
    Recipe_extendedIngredients:
      type: object
      properties:
        id:
          type: integer
          description: Ingredient ID
          example: 12345
        amount:
          type: number
          format: float
          example: 1
        unit:
          type: string
          example: teaspoon
    Step_length:
      type: object
      properties:
        number:
          type: integer
          description: Length of time
        unit:
          type: string
          description: "Unit of time (e.g., minutes)"
    Step_temperature:
      type: object
      properties:
        number:
          type: number
          description: Temperature value
          format: float
        unit:
          type: string
          description: "Temperature unit (e.g., Fahrenheit)"
    FamilyRecipe_instructions:
      type: object
      properties:
        index:
          type: integer
        instruction:
          type: string
